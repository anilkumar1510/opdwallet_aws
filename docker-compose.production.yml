# Production Docker Compose - For AWS Deployment
# Now uses nginx reverse proxy - identical setup to local

services:
  # Nginx reverse proxy - single entry point
  nginx:
    image: nginx:alpine
    container_name: opd-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - api
      - web-admin
      - web-member
      - web-doctor
    networks:
      - opd-network-prod

  mongo:
    image: mongo:7.0
    container_name: opd-mongo-prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: opd_wallet
    volumes:
      - mongo-data:/data/db
    networks:
      - opd-network-prod

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.production
    container_name: opd-api-prod
    restart: always
    # No external port - accessed only through nginx
    expose:
      - "4000"
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:admin123@opd-mongo-prod:27017/opd_wallet?authSource=admin
      PORT: 4000
    depends_on:
      - mongo
    networks:
      - opd-network-prod

  web-admin:
    build:
      context: ./web-admin
      dockerfile: Dockerfile.production
      args:
        # Browser calls go through nginx (relative path works with any domain)
        NEXT_PUBLIC_API_URL: /api
    container_name: opd-web-admin-prod
    restart: always
    # No external port - accessed only through nginx at /admin
    expose:
      - "3000"
    environment:
      NODE_ENV: production
      # Server-side calls go direct to API
      API_URL: http://opd-api-prod:4000/api
    depends_on:
      - api
    networks:
      - opd-network-prod

  web-member:
    build:
      context: ./web-member
      dockerfile: Dockerfile.production
      args:
        # Browser calls go through nginx (relative path works with any domain)
        NEXT_PUBLIC_API_URL: /api
    container_name: opd-web-member-prod
    restart: always
    # No external port - accessed only through nginx at /
    expose:
      - "3000"
    environment:
      NODE_ENV: production
      # Server-side calls go direct to API
      API_URL: http://opd-api-prod:4000/api
    depends_on:
      - api
    networks:
      - opd-network-prod

  web-doctor:
    build:
      context: ./web-doctor
      dockerfile: Dockerfile.production
      args:
        # Browser calls go through nginx (relative path works with any domain)
        NEXT_PUBLIC_API_URL: /api
    container_name: opd-web-doctor-prod
    restart: always
    # No external port - accessed only through nginx at /doctor
    expose:
      - "3003"
    environment:
      NODE_ENV: production
      # Server-side calls go direct to API
      API_URL: http://opd-api-prod:4000/api
      PORT: 3003
    depends_on:
      - api
    networks:
      - opd-network-prod

volumes:
  mongo-data:

networks:
  opd-network-prod:
    driver: bridge