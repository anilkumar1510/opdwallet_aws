# Production Docker Compose - For AWS Only
# This file is completely separate from local docker-compose.yml

services:
  mongo:
    image: mongo:7.0
    container_name: opd-mongo-prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: opd_wallet
    volumes:
      - mongo-data-prod:/data/db
    networks:
      - opd-network-prod

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.production
    container_name: opd-api-prod
    restart: always
    ports:
      - "4000:4000"
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:admin123@mongo:27017/opd_wallet?authSource=admin
      PORT: 4000
    depends_on:
      - mongo
    networks:
      - opd-network-prod

  web-admin:
    build:
      context: ./web-admin
      dockerfile: Dockerfile.production
      args:
        NEXT_PUBLIC_API_URL: http://51.21.190.63:4000/api
    container_name: opd-web-admin-prod
    restart: always
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: production
      API_URL: http://api:4000
    depends_on:
      - api
    networks:
      - opd-network-prod

  web-member:
    build:
      context: ./web-member
      dockerfile: Dockerfile.production
      args:
        NEXT_PUBLIC_API_URL: http://51.21.190.63:4000/api
    container_name: opd-web-member-prod
    restart: always
    ports:
      - "3002:3000"
    environment:
      NODE_ENV: production
      API_URL: http://api:4000
    depends_on:
      - api
    networks:
      - opd-network-prod

  web-doctor:
    build:
      context: ./web-doctor
      dockerfile: Dockerfile.production
      args:
        NEXT_PUBLIC_API_URL: http://51.21.190.63:4000/api
    container_name: opd-web-doctor-prod
    restart: always
    ports:
      - "3003:3000"
    environment:
      NODE_ENV: production
      API_URL: http://api:4000
    depends_on:
      - api
    networks:
      - opd-network-prod

volumes:
  mongo-data-prod:

networks:
  opd-network-prod:
    driver: bridge