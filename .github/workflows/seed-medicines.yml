name: Seed Medicine Database on AWS

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "seed" to confirm seeding the medicine database'
        required: true
        default: ''

jobs:
  seed-medicines:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "seed" ]; then
            echo "‚ùå ERROR: You must type 'seed' to confirm"
            exit 1
          fi
          echo "‚úÖ Confirmation validated"

      - name: Seed Medicine Database on AWS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          command_timeout: 5m
          script: |
            echo "üå± Starting medicine database seeding on AWS..."

            cd ~/opdwallet_aws || { echo "‚ùå ERROR: Cannot access opdwallet_aws directory"; exit 1; }

            # Check if medicines.json exists
            if [ ! -f "api/src/scripts/medicines.json" ]; then
              echo "‚ùå ERROR: medicines.json not found. Please pull latest code first."
              exit 1
            fi

            echo "üìä Clearing existing medicines..."
            docker exec opd-mongodb-prod mongosh opd_wallet --quiet --eval "
              const count = db.medicine_database.countDocuments();
              print('Current medicines count: ' + count);
              db.medicine_database.deleteMany({});
              print('‚úÖ Cleared existing medicines');
            "

            echo "üìä Importing medicines from JSON..."
            # Copy JSON file into the MongoDB container
            docker cp api/src/scripts/medicines.json opd-mongodb-prod:/tmp/medicines.json

            # Import using mongoimport
            docker exec opd-mongodb-prod mongoimport \
              --db opd_wallet \
              --collection medicine_database \
              --file /tmp/medicines.json \
              --jsonArray

            if [ $? -eq 0 ]; then
              echo "‚úÖ Medicine database seeded successfully!"

              # Create text index for search
              echo "üìä Creating text index for search..."
              docker exec opd-mongodb-prod mongosh opd_wallet --quiet --eval "
                db.medicine_database.createIndex({
                  genericName: 'text',
                  brandNames: 'text',
                  searchText: 'text'
                });
                print('‚úÖ Text index created');
              "

              # Verify the count
              echo "üîç Verifying medicine count in database..."
              docker exec opd-mongodb-prod mongosh opd_wallet --quiet --eval "
                const count = db.medicine_database.countDocuments();
                print('üìä Total medicines in database: ' + count);
              "
            else
              echo "‚ùå ERROR: Medicine seeding failed"
              exit 1
            fi

            echo "üéâ Medicine database setup complete!"
