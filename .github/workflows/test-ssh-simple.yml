name: Test SSH Simple

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  test-ssh:
    runs-on: ubuntu-latest

    steps:
    - name: Check Secrets Exist
      run: |
        echo "Testing which secrets are configured:"
        echo "EC2_HOST is set: ${{ secrets.EC2_HOST != '' && 'YES' || 'NO' }}"
        echo "EC2_SSH_KEY is set: ${{ secrets.EC2_SSH_KEY != '' && 'YES' || 'NO' }}"
        echo "EC2_SSH_KEY_BASE64 is set: ${{ secrets.EC2_SSH_KEY_BASE64 != '' && 'YES' || 'NO' }}"

    - name: Test Base64 Key If Exists
      if: ${{ secrets.EC2_SSH_KEY_BASE64 != '' }}
      run: |
        echo "Base64 key exists. Testing decode..."

        # Save and decode the key
        echo "${{ secrets.EC2_SSH_KEY_BASE64 }}" > key.b64

        # Check base64 format
        echo "Base64 length: $(wc -c < key.b64)"
        echo "First 20 chars: $(head -c 20 key.b64)"

        # Try to decode
        if base64 -d key.b64 > key.pem 2>/dev/null; then
          echo "✓ Base64 decode successful"
          chmod 600 key.pem

          # Check decoded content
          if head -n 1 key.pem | grep -q "BEGIN RSA PRIVATE KEY"; then
            echo "✓ Decoded key has correct RSA header"

            # Test SSH connection
            echo "Testing SSH connection to ${{ secrets.EC2_HOST }}..."
            ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 -i key.pem ubuntu@${{ secrets.EC2_HOST }} 'echo "✓ SSH CONNECTION SUCCESSFUL!"' || echo "✗ SSH connection failed"
          else
            echo "✗ Decoded content is not a valid RSA key"
            echo "First line of decoded: $(head -n 1 key.pem)"
          fi
        else
          echo "✗ Base64 decode failed"
        fi

        # Cleanup
        rm -f key.b64 key.pem

    - name: Test Plain Key If Exists
      if: ${{ secrets.EC2_SSH_KEY != '' }}
      run: |
        echo "Plain key exists. Testing..."

        # Save key with different methods
        echo "${{ secrets.EC2_SSH_KEY }}" > key1.pem
        chmod 600 key1.pem

        # Check format
        if head -n 1 key1.pem | grep -q "BEGIN RSA PRIVATE KEY"; then
          echo "✓ Plain key has correct header"
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 -i key1.pem ubuntu@${{ secrets.EC2_HOST }} 'echo "✓ PLAIN KEY WORKS!"' || echo "✗ Plain key SSH failed"
        else
          echo "✗ Plain key format issue"
          echo "Trying with line ending fix..."

          # Try fixing line endings
          echo "${{ secrets.EC2_SSH_KEY }}" | sed 's/\\n/\
/g' > key2.pem
          chmod 600 key2.pem

          if head -n 1 key2.pem | grep -q "BEGIN RSA PRIVATE KEY"; then
            echo "✓ Fixed key has correct header"
            ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 -i key2.pem ubuntu@${{ secrets.EC2_HOST }} 'echo "✓ FIXED KEY WORKS!"' || echo "✗ Fixed key SSH failed"
          fi
        fi

        # Cleanup
        rm -f key1.pem key2.pem