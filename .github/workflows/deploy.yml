name: Deploy to AWS EC2

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Navigate to project directory
          cd /home/ubuntu/opdwallet

          # Pull latest changes
          git pull origin main

          # Update environment variables
          export PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
          sed -i "s|YOUR_EC2_PUBLIC_IP|$PUBLIC_IP|g" .env

          # Build and restart containers
          docker-compose -f docker-compose.prod.yml build
          docker-compose -f docker-compose.prod.yml down
          docker-compose -f docker-compose.prod.yml up -d

          # Clean up old images
          docker image prune -f

          # Check status
          docker-compose -f docker-compose.prod.yml ps

          echo "Deployment completed successfully!"
          echo "Access at http://$PUBLIC_IP"

    - name: Send deployment notification
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'Deployment to EC2 ${{ job.status }}'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      continue-on-error: true