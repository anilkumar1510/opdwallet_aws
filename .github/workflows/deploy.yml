name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          command_timeout: 55m
          script: |
            echo "🚀 Starting deployment..."

            # Ensure we're in the right directory
            if [ -d ~/opdwallet ]; then
              cd ~/opdwallet
              echo "📥 Pulling latest code..."
              git pull origin main || git reset --hard origin/main
            else
              echo "📁 Cloning repository..."
              cd ~
              git clone https://github.com/anilkumar1510/opdwallet.git
              cd opdwallet
            fi

            # Ensure deployment script is executable
            chmod +x deploy-production.sh deploy-on-aws.sh scripts/cleanup-containers.sh 2>/dev/null || true

            # Run comprehensive cleanup to prevent port conflicts
            echo "🧹 Running container cleanup to prevent port conflicts..."
            ./scripts/cleanup-containers.sh || echo "⚠️ Cleanup script not found, proceeding with manual cleanup"

            # Manual fallback cleanup if script fails
            echo "🛑 Stopping any existing OPD containers..."
            docker stop $(docker ps -q --filter name="opd-") 2>/dev/null || true
            docker rm $(docker ps -aq --filter name="opd-") 2>/dev/null || true

            # Detect port conflicts before deployment
            echo "🔍 Checking for port conflicts on 4000, 3001, 3002..."
            CONFLICTS=$(netstat -tuln 2>/dev/null | grep -E ":(4000|3001|3002|80|443) " || true)
            if [ ! -z "$CONFLICTS" ]; then
              echo "⚠️ Warning: Found services using deployment ports:"
              echo "$CONFLICTS"
              echo "🔄 Attempting to resolve conflicts..."

              # Kill processes using our ports
              sudo fuser -k 4000/tcp 2>/dev/null || true
              sudo fuser -k 3001/tcp 2>/dev/null || true
              sudo fuser -k 3002/tcp 2>/dev/null || true
              sudo fuser -k 80/tcp 2>/dev/null || true
              sudo fuser -k 443/tcp 2>/dev/null || true

              sleep 5
            else
              echo "✅ No port conflicts detected"
            fi

            # Clean up Docker to free memory
            docker system prune -af --volumes 2>/dev/null || true

            # Simple build and run
            echo "🔨 Building and starting services..."
            docker-compose -f docker-compose.prod.yml up -d --build --remove-orphans

            # Wait for services
            sleep 30

            # Verify no port conflicts after deployment
            echo "🔍 Post-deployment port conflict check..."
            CONFLICTS_POST=$(docker ps --format "table {{.Names}}\t{{.Ports}}" | grep -E ":4000.*:4000" | wc -l || echo "0")
            if [ "$CONFLICTS_POST" -gt 1 ]; then
              echo "❌ ERROR: Multiple containers detected on port 4000!"
              docker ps --format "table {{.Names}}\t{{.Ports}}" | grep ":4000"
              exit 1
            else
              echo "✅ No port 4000 conflicts detected"
            fi

            # Check status
            echo "📊 Deployment status:"
            docker ps

            echo "✅ Deployment completed successfully"