version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: opd-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - web-admin
      - web-member
    restart: unless-stopped
    networks:
      - opd-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: opd-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongo-data:/data/db
      - ./api/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - opd-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  # NestJS API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    container_name: opd-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DATABASE}?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      COOKIE_NAME: ${COOKIE_NAME}
      COOKIE_DOMAIN: ${COOKIE_DOMAIN}
      COOKIE_SECURE: "true"
      COOKIE_HTTPONLY: "true"
      COOKIE_SAMESITE: "lax"
      COOKIE_MAX_AGE: "604800000"
    depends_on:
      - mongodb
    networks:
      - opd-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Portal (Next.js)
  web-admin:
    build:
      context: ./web-admin
      dockerfile: Dockerfile.prod
      args:
        NEXT_PUBLIC_API_URL: ${PUBLIC_API_URL}
    container_name: opd-web-admin
    restart: unless-stopped
    environment:
      NODE_ENV: production
      API_URL: http://api:4000/api
      NEXT_PUBLIC_API_URL: ${PUBLIC_API_URL}
    depends_on:
      - api
    networks:
      - opd-network

  # Member Portal (Next.js)
  web-member:
    build:
      context: ./web-member
      dockerfile: Dockerfile.prod
      args:
        NEXT_PUBLIC_API_URL: ${PUBLIC_API_URL}
    container_name: opd-web-member
    restart: unless-stopped
    environment:
      NODE_ENV: production
      API_URL: http://api:4000/api
      NEXT_PUBLIC_API_URL: ${PUBLIC_API_URL}
    depends_on:
      - api
    networks:
      - opd-network

networks:
  opd-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local